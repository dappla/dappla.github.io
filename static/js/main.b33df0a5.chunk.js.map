{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","table","minWidth","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","keyword","location","radius","a","console","log","url","fetchJsonp","timeout","jsonp","SignIn","useState","setKeyword","links","setLinks","classes","Container","component","maxWidth","CssBaseline","className","onChange","e","target","value","placeholder","IconButton","onClick","queryProxy","then","res","json","results","catch","ex","fontSize","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","scope","name","city","area","telephone","Box","mt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b33df0a5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport fetchJsonp from 'fetch-jsonp';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nasync function queryProxy(keyword: string, location: string, radius: number) {\n  console.log('queryProxy');\n  let url = `https://api.map.baidu.com/place/v2/search?query=${keyword}&location=${location}&radius=${radius}&output=json&ak=wzXaHuVNofMXYciCGOggcszd`;\n  let jsonp = await fetchJsonp(url, { timeout: 3000 });\n  return jsonp;\n}\n\nexport interface Link {\n  name: string;\n  city: string;\n  area: string;\n  telephone: string;\n}\n\nexport default function SignIn() {\n  const [keyword, setKeyword] = useState('');\n  const [links, setLinks] = useState([]);\n  const classes = useStyles();\n\n  const inputTextHandler = (e: any) => {\n    setKeyword(e.target.value);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Container maxWidth=\"md\">\n          <input onChange={inputTextHandler} placeholder=\"搜索关键字\" />\n          <IconButton\n            onClick={() => {\n              queryProxy(keyword, '39.915,116.404', 2000)\n                .then((res) => {\n                  return res.json();\n                })\n                .then((json) => {\n                  setLinks(json.results);\n                  console.log(json.results);\n                })\n                .catch((ex) => {\n                  console.log('parsing error', ex);\n                });\n            }}\n          >\n            <SearchIcon fontSize='small'/>\n          </IconButton>\n        </Container>\n\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>name</TableCell>\n                <TableCell align=\"right\">city</TableCell>\n                <TableCell align=\"right\">area</TableCell>\n                <TableCell align=\"right\">telephone</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {links.map((row: Link) => (\n                <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.city}</TableCell>\n                  <TableCell align=\"right\">{row.area}</TableCell>\n                  <TableCell align=\"right\">{row.telephone}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}